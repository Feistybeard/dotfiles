// If you'd like to override the default keybindings completely, be sure to change "keybinds" to "keybinds clear-defaults=true"
keybinds {
    normal clear-defaults=true {
        // plugins
        bind "Ctrl y" {
            LaunchOrFocusPlugin "file:~/.config/zellij/plugins/harpoon.wasm" {
                floating true; move_to_focused_tab true;
            }
        }
        bind "F1" {
            LaunchOrFocusPlugin "file:~/.config/zellij/plugins/monocle.wasm" {
                floating true
        };
        SwitchToMode "Normal"
        }

        // activate tmux mode
        bind "Ctrl a" { SwitchToMode "Tmux"; }
        unbind "Ctrl b"

        // general
        bind "Alt '" { NewPane "Right"; }
        bind "Alt \"" { NewPane "Down"; }
        bind "Alt x" { CloseFocus; SwitchToMode "Normal"; }
        bind "Alt w" { ToggleFloatingPanes;}
        bind "Alt t" { NewTab;}
        bind "Alt h" { MoveFocusOrTab "Left"; }
        bind "Alt l" { MoveFocusOrTab "Right"; }
        bind "Alt j" { MoveFocus "Down"; }
        bind "Alt k" { MoveFocus "Up"; }
        bind "Alt H" { MovePane "Left"; }
        bind "Alt L" { MovePane "Right"; }
        bind "Alt J" { MovePane "Down"; }
        bind "Alt K" { MovePane "Up"; }
        bind "Alt =" { Resize "Increase"; }
        bind "Alt -" { Resize "Decrease"; }
        bind "Alt [" { PreviousSwapLayout; }
        bind "Alt ]" { NextSwapLayout; }
        bind "Alt i" { MoveTab "Left"; }
        bind "Alt o" { MoveTab "Right"; }
        bind "Alt z" { ToggleFocusFullscreen; }
        bind "Alt Up" { ScrollUp; }
        bind "Alt Down" { ScrollDown; }
        bind "Alt e" { EditScrollback; }
        bind "Alt g" {
            Run "lazygit" {
                floating true
                width "80%"
                height "80%"
                x "10%"
                y "10%"
            }
        }
    }

    tmux clear-defaults=true {
        bind "Ctrl a" { Write 2; SwitchToMode "Normal"; }
        bind "Esc" { SwitchToMode "Normal"; }
        bind "g" { SwitchToMode "Locked"; }
        bind "p" { SwitchToMode "Pane"; }
        bind "t" { SwitchToMode "Tab"; }
        bind "r" { SwitchToMode "Resize"; }
        bind "m" { SwitchToMode "Move"; }
        bind "/" { SwitchToMode "Scroll"; }
        bind "s" { SwitchToMode "Session"; }
        bind "q" { Detach; }
        bind "]" { GoToNextTab; }
        bind "[" { GoToPreviousTab; }
    }

    pane {
        bind "Esc" { SwitchToMode "Normal"; }
        bind "h" "Left" { MoveFocus "Left"; }
        bind "l" "Right" { MoveFocus "Right"; }
        bind "j" "Down" { MoveFocus "Down"; }
        bind "k" "Up" { MoveFocus "Up"; }
        bind "c" { CloseFocus; SwitchToMode "Normal"; }
        bind "z" { ToggleFocusFullscreen; SwitchToMode "Normal"; }
        bind "f" { ToggleFloatingPanes; SwitchToMode "Normal"; }
        bind "e" { TogglePaneEmbedOrFloating; SwitchToMode "Normal"; }
    }

    tab {
        bind "Esc" { SwitchToMode "Normal"; }
        bind "r" { SwitchToMode "RenameTab"; TabNameInput 0; }
        bind "h" "Left" "Up" "k" { GoToPreviousTab; }
        bind "l" "Right" "Down" "j" { GoToNextTab; }
        bind "n" { NewTab; SwitchToMode "Normal"; }
        bind "c" { CloseTab; SwitchToMode "Normal"; }
        bind "s" { ToggleActiveSyncTab; SwitchToMode "Normal"; }
        bind "b" { BreakPane; SwitchToMode "Normal"; }
        bind "]" { BreakPaneRight; SwitchToMode "Normal"; }
        bind "[" { BreakPaneLeft; SwitchToMode "Normal"; }
        bind "1" { GoToTab 1; SwitchToMode "Normal"; }
        bind "2" { GoToTab 2; SwitchToMode "Normal"; }
        bind "3" { GoToTab 3; SwitchToMode "Normal"; }
        bind "4" { GoToTab 4; SwitchToMode "Normal"; }
        bind "5" { GoToTab 5; SwitchToMode "Normal"; }
        bind "6" { GoToTab 6; SwitchToMode "Normal"; }
        bind "7" { GoToTab 7; SwitchToMode "Normal"; }
        bind "8" { GoToTab 8; SwitchToMode "Normal"; }
        bind "9" { GoToTab 9; SwitchToMode "Normal"; }
        bind "Tab" { ToggleTab; }
    }

    search {
        bind "Esc" { SwitchToMode "Normal"; }
        bind "Ctrl c" { ScrollToBottom; SwitchToMode "Normal"; }
        bind "j" "Down" { ScrollDown; }
        bind "k" "Up" { ScrollUp; }
        bind "Ctrl f" "PageDown" "Right" "l" { PageScrollDown; }
        bind "Ctrl b" "PageUp" "Left" "h" { PageScrollUp; }
        bind "d" { HalfPageScrollDown; }
        bind "u" { HalfPageScrollUp; }
        bind "n" { Search "down"; }
        bind "p" { Search "up"; }
        bind "c" { SearchToggleOption "CaseSensitivity"; }
        bind "w" { SearchToggleOption "Wrap"; }
        bind "o" { SearchToggleOption "WholeWord"; }
    }

    session {
        bind "Esc" { SwitchToMode "Normal"; }
        bind "d" { Detach; }
        bind "s" {
            LaunchOrFocusPlugin "session-manager" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Normal"
        }
    }

    // normal bindings
    // normal {
    //     //plugin autolock
    //     bind "Enter" {  // Intercept `Enter`.
    //         WriteChars "\u{000D}";  // Passthru `Enter`.
    //         MessagePlugin "autolock" {};  // Activate the autolock plugin.
    //     }
    //     // Note: You may want to bind/intercept/relay other keys to activate this plugin,
    //     // like `Ctrl+r` which opens shell history in Atuin / FZF. For example:
    //     bind "Ctrl r" {  // Intercept `Ctrl+r`.
    //         WriteChars "\u{0012}";  // Passthru `Ctrl+r`
    //         MessagePlugin "autolock" {};  // Activate the autolock plugin.
    //     }
    //     //plugin monocle
    //     bind "F1" {
    //         LaunchOrFocusPlugin "file:~/.config/zellij/plugins/monocle.wasm" {
    //             floating true
    //     };
    //     SwitchToMode "Normal"
    //     }
    //     // bind "Alt m" to open monocle on top of the current pane and open any results on top of itself
    //     bind "Alt m" {
    //         LaunchPlugin "file:~/.config/zellij/plugins/monocle.wasm" {
    //             in_place true
    //             kiosk true
    //         };
    //         SwitchToMode "Normal"
    //     }
    // }
    // locked {
    //     bind "Ctrl g" { SwitchToMode "Normal"; }
    // }
    // resize {
    //     bind "Ctrl n" { SwitchToMode "Normal"; }
    //     bind "h" "Left" { Resize "Increase Left"; }
    //     bind "j" "Down" { Resize "Increase Down"; }
    //     bind "k" "Up" { Resize "Increase Up"; }
    //     bind "l" "Right" { Resize "Increase Right"; }
    //     bind "H" { Resize "Decrease Left"; }
    //     bind "J" { Resize "Decrease Down"; }
    //     bind "K" { Resize "Decrease Up"; }
    //     bind "L" { Resize "Decrease Right"; }
    //     bind "=" "+" { Resize "Increase"; }
    //     bind "-" { Resize "Decrease"; }
    // }
    // pane {
    //     bind "Ctrl p" { SwitchToMode "Normal"; }
    //     bind "h" "Left" { MoveFocus "Left"; }
    //     bind "l" "Right" { MoveFocus "Right"; }
    //     bind "j" "Down" { MoveFocus "Down"; }
    //     bind "k" "Up" { MoveFocus "Up"; }
    //     bind "p" { SwitchFocus; }
    //     bind "n" { NewPane; SwitchToMode "Normal"; }
    //     bind "d" { NewPane "Down"; SwitchToMode "Normal"; }
    //     bind "r" { NewPane "Right"; SwitchToMode "Normal"; }
    //     bind "x" { CloseFocus; SwitchToMode "Normal"; }
    //     bind "f" { ToggleFocusFullscreen; SwitchToMode "Normal"; }
    //     bind "z" { TogglePaneFrames; SwitchToMode "Normal"; }
    //     bind "w" { ToggleFloatingPanes; SwitchToMode "Normal"; }
    //     bind "e" { TogglePaneEmbedOrFloating; SwitchToMode "Normal"; }
    //     bind "c" { SwitchToMode "RenamePane"; PaneNameInput 0;}
    // }
    // move {
    //     bind "Ctrl m" { SwitchToMode "Normal"; }
    //     bind "n" "Tab" { MovePane; }
    //     bind "p" { MovePaneBackwards; }
    //     bind "h" "Left" { MovePane "Left"; }
    //     bind "j" "Down" { MovePane "Down"; }
    //     bind "k" "Up" { MovePane "Up"; }
    //     bind "l" "Right" { MovePane "Right"; }
    // }
    // tab {
    //     bind "Ctrl t" { SwitchToMode "Normal"; }
    //     bind "r" { SwitchToMode "RenameTab"; TabNameInput 0; }
    //     bind "h" "Left" "Up" "k" { GoToPreviousTab; }
    //     bind "l" "Right" "Down" "j" { GoToNextTab; }
    //     bind "n" { NewTab; SwitchToMode "Normal"; }
    //     bind "x" { CloseTab; SwitchToMode "Normal"; }
    //     bind "s" { ToggleActiveSyncTab; SwitchToMode "Normal"; }
    //     bind "b" { BreakPane; SwitchToMode "Normal"; }
    //     bind "]" { BreakPaneRight; SwitchToMode "Normal"; }
    //     bind "[" { BreakPaneLeft; SwitchToMode "Normal"; }
    //     bind "1" { GoToTab 1; SwitchToMode "Normal"; }
    //     bind "2" { GoToTab 2; SwitchToMode "Normal"; }
    //     bind "3" { GoToTab 3; SwitchToMode "Normal"; }
    //     bind "4" { GoToTab 4; SwitchToMode "Normal"; }
    //     bind "5" { GoToTab 5; SwitchToMode "Normal"; }
    //     bind "6" { GoToTab 6; SwitchToMode "Normal"; }
    //     bind "7" { GoToTab 7; SwitchToMode "Normal"; }
    //     bind "8" { GoToTab 8; SwitchToMode "Normal"; }
    //     bind "9" { GoToTab 9; SwitchToMode "Normal"; }
    //     bind "Tab" { ToggleTab; }
    // }
    // scroll {
    //     bind "Ctrl s" { SwitchToMode "Normal"; }
    //     bind "e" { EditScrollback; SwitchToMode "Normal"; }
    //     bind "s" { SwitchToMode "EnterSearch"; SearchInput 0; }
    //     bind "Ctrl c" { ScrollToBottom; SwitchToMode "Normal"; }
    //     bind "j" "Down" { ScrollDown; }
    //     bind "k" "Up" { ScrollUp; }
    //     bind "Ctrl f" "PageDown" "Right" "l" { PageScrollDown; }
    //     bind "Ctrl b" "PageUp" "Left" "h" { PageScrollUp; }
    //     bind "d" { HalfPageScrollDown; }
    //     bind "u" { HalfPageScrollUp; }
    //     // uncomment this and adjust key if using copy_on_select=false
    //     // bind "Alt c" { Copy; }
    // }
    // search {
    //     bind "Ctrl s" { SwitchToMode "Normal"; }
    //     bind "Ctrl c" { ScrollToBottom; SwitchToMode "Normal"; }
    //     bind "j" "Down" { ScrollDown; }
    //     bind "k" "Up" { ScrollUp; }
    //     bind "Ctrl f" "PageDown" "Right" "l" { PageScrollDown; }
    //     bind "Ctrl b" "PageUp" "Left" "h" { PageScrollUp; }
    //     bind "d" { HalfPageScrollDown; }
    //     bind "u" { HalfPageScrollUp; }
    //     bind "n" { Search "down"; }
    //     bind "p" { Search "up"; }
    //     bind "c" { SearchToggleOption "CaseSensitivity"; }
    //     bind "w" { SearchToggleOption "Wrap"; }
    //     bind "o" { SearchToggleOption "WholeWord"; }
    // }
    // entersearch {
    //     bind "Ctrl c" "Esc" { SwitchToMode "Scroll"; }
    //     bind "Enter" { SwitchToMode "Search"; }
    // }
    // renametab {
    //     bind "Ctrl c" { SwitchToMode "Normal"; }
    //     bind "Esc" { UndoRenameTab; SwitchToMode "Tab"; }
    // }
    // renamepane {
    //     bind "Ctrl c" { SwitchToMode "Normal"; }
    //     bind "Esc" { UndoRenamePane; SwitchToMode "Pane"; }
    // }
    // session {
    //     bind "Ctrl s" { SwitchToMode "Normal"; }
    //     bind "Ctrl s" { SwitchToMode "Scroll"; }
    //     bind "d" { Detach; }
    //     bind "w" {
    //         LaunchOrFocusPlugin "session-manager" {
    //             floating true
    //             move_to_focused_tab true
    //         };
    //         SwitchToMode "Normal"
    //     }
    // }
    // tmux {
    //     bind "[" { SwitchToMode "Scroll"; }
    //     bind "Ctrl b" { Write 2; SwitchToMode "Normal"; }
    //     bind "\"" { NewPane "Down"; SwitchToMode "Normal"; }
    //     bind "%" { NewPane "Right"; SwitchToMode "Normal"; }
    //     bind "z" { ToggleFocusFullscreen; SwitchToMode "Normal"; }
    //     bind "c" { NewTab; SwitchToMode "Normal"; }
    //     bind "," { SwitchToMode "RenameTab"; }
    //     bind "p" { GoToPreviousTab; SwitchToMode "Normal"; }
    //     bind "n" { GoToNextTab; SwitchToMode "Normal"; }
    //     bind "Left" { MoveFocus "Left"; SwitchToMode "Normal"; }
    //     bind "Right" { MoveFocus "Right"; SwitchToMode "Normal"; }
    //     bind "Down" { MoveFocus "Down"; SwitchToMode "Normal"; }
    //     bind "Up" { MoveFocus "Up"; SwitchToMode "Normal"; }
    //     bind "h" { MoveFocus "Left"; SwitchToMode "Normal"; }
    //     bind "l" { MoveFocus "Right"; SwitchToMode "Normal"; }
    //     bind "j" { MoveFocus "Down"; SwitchToMode "Normal"; }
    //     bind "k" { MoveFocus "Up"; SwitchToMode "Normal"; }
    //     bind "o" { FocusNextPane; }
    //     bind "d" { Detach; }
    //     bind "Space" { NextSwapLayout; }
    //     bind "x" { CloseFocus; SwitchToMode "Normal"; }
    // }
    // shared_except "locked" {
    //     bind "Ctrl g" { SwitchToMode "Locked"; }
    //     bind "Ctrl q" { Detach; }
    //     bind "Alt n" { NewPane; }
    //     bind "Alt i" { MoveTab "Left"; }
    //     bind "Alt o" { MoveTab "Right"; }
    //     bind "Alt h" "Alt Left" { MoveFocusOrTab "Left"; }
    //     bind "Alt l" "Alt Right" { MoveFocusOrTab "Right"; }
    //     bind "Alt j" "Alt Down" { MoveFocus "Down"; }
    //     bind "Alt k" "Alt Up" { MoveFocus "Up"; }
    //     bind "Alt =" "Alt +" { Resize "Increase"; }
    //     bind "Alt -" { Resize "Decrease"; }
    //     bind "Alt [" { PreviousSwapLayout; }
    //     bind "Alt ]" { NextSwapLayout; }
    //
    //     //plugin harpoon
    //     // bind "Ctrl y" {
    //     //     LaunchOrFocusPlugin "file:~/.config/zellij/plugins/harpoon.wasm" {
    //     //         floating true; move_to_focused_tab true;
    //     //     }
    //     // }
    //
    //     //plugin zellij_workspace
    //     bind "Ctrl f" {
    //         LaunchOrFocusPlugin "file:~/.config/zellij/plugins/zellij-workspace.wasm" {
    //             floating true
    //
    //             debug false                     // display debug info, config, parse command etc
    //         }
    //     }
    //
    //     // plugin zellij_forgot
    //     bind "Ctrl y" {
    //         LaunchOrFocusPlugin "file:~/.config/zellij/plugins/zellij_forgot.wasm" {
    //             floating true
    //         }
    //     }
    //
    //     // Put keybindings here if they conflict with Vim or others.
    //     bind "Ctrl h" { MoveFocus "Left"; }
    //     bind "Ctrl l" { MoveFocus "Right"; }
    //     bind "Ctrl j" { MoveFocus "Down"; }
    //     bind "Ctrl k" { MoveFocus "Up"; }
    //
    //     // bind "Ctrl d" { HalfPageScrollDown; }
    //     // bind "Ctrl u" { HalfPageScrollUp; }
    //
    //     // bind "Ctrl f" { PageScrollDown; }
    //     // bind "Ctrl b" { PageScrollUp; }
    // }
    // shared_except "normal" "locked" {
    //     bind "Enter" "Esc" { SwitchToMode "Normal"; }
    // }
    // shared_except "pane" "locked" {
    //     bind "Ctrl p" { SwitchToMode "Pane"; }
    // }
    // shared_except "resize" "locked" {
    //     bind "Ctrl n" { SwitchToMode "Resize"; }
    // }
    // shared_except "scroll" "locked" {
    //     bind "Ctrl s" { SwitchToMode "Scroll"; }
    // }
    // shared_except "session" "locked" {
    //     bind "Ctrl a" { SwitchToMode "Session"; }
    // }
    // shared_except "tab" "locked" {
    //     bind "Ctrl t" { SwitchToMode "Tab"; }
    // }
    // shared_except "move" "locked" {
    //     bind "Ctrl m" { SwitchToMode "Move"; }
    // }
    // shared_except "tmux" "locked" {
    //     bind "Ctrl b" { SwitchToMode "Tmux"; }
    // }
}

plugins {
    // Define the "autolock" plugin.
    // autolock location="file:~/.config/zellij/plugins/zellij-autolock.wasm" {
    //     triggers "nvim|vim"  // Lock when any open these programs open. They are expected to unlock themselves when closed (e.g., using zellij.vim plugin).
    //     watch_triggers "fzf|zoxide|atuin"  // Lock when any of these open and monitor until closed.
    //     watch_interval "1.0"  // When monitoring, check every X seconds.
    // }

    tab-bar location="zellij:tab-bar"
    status-bar location="zellij:status-bar"
    strider location="zellij:strider"
    compact-bar location="zellij:compact-bar"
    session-manager location="zellij:session-manager"
    welcome-screen location="zellij:session-manager" {
        welcome_screen true
    }
    filepicker location="zellij:strider" {
        cwd "/"
    }
}

// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// Options:
//   - detach (Default)
//   - quit
//
on_force_close "detach"

//  Send a request for a simplified ui (without arrow fonts) to plugins
//  Options:
//    - true
//    - false (Default)
//
simplified_ui true

// Choose the path to the default shell that zellij will use for opening new panes
// Default: $SHELL
//
// default_shell "fish"

// Choose the path to override cwd that zellij will use for opening new panes
//
// default_cwd ""

// Toggle between having pane frames around the panes
// Options:
//   - true (default)
//   - false
//
pane_frames false

// Toggle between having Zellij lay out panes according to a predefined set of layouts whenever possible
// Options:
//   - true (default)
//   - false
//
// auto_layout true

// Whether sessions should be serialized to the cache folder (including their tabs/panes, cwds and running commands) so that they can later be resurrected
// Options:
//   - true (default)
//   - false
//
session_serialization true

// Whether pane viewports are serialized along with the session, default is false
// Options:
//   - true
//   - false (default)
serialize_pane_viewport true

// Scrollback lines to serialize along with the pane viewport when serializing sessions, 0
// defaults to the scrollback size. If this number is higher than the scrollback size, it will
// also default to the scrollback size. This does nothing if `serialize_pane_viewport` is not true.
//
// scrollback_lines_to_serialize 10000

// Define color themes for Zellij
// For more examples, see: https://github.com/zellij-org/zellij/tree/main/example/themes
// Once these themes are defined, one of them should to be selected in the "theme" section of this file
//
themes {
    cyberdream-light {
        bg "#ffffff"
        fg "#16181a"
        black "#7b8496"
        red "#d11500"
        green "#008b0c"
        yellow "#997b00"
        blue "#0057d1"
        magenta "#d100bf"
        cyan "#008c99"
        white "#16181a"
        orange "#d17c00"
    }
    cyberdream {
        bg "#16181a"
        fg "#ffffff"
        black "#7b8496"
        red "#ff6e5e"
        green "#5eff6c"
        yellow "#f1ff5e"
        blue "#5ea1ff"
        magenta "#ff5ef1"
        cyan "#5ef1ff"
        white "#ffffff"
        orange "#ffbd5e"
    }
}

// Choose the theme that is specified in the themes section.
// Default: default
//
theme "cyberdream"
// The name of the default layout to load on startup
// Default: "default"
//
default_layout "compact"

// Choose the mode that zellij uses when starting up.
// Default: normal
//
// default_mode "locked"

// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// Options:
//   - true (default)
//   - false
//
// mouse_mode false

// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// Valid values: positive integers
// Default value: 10000
//
// scroll_buffer_size 10000

// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx

// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
//
// copy_clipboard "primary"

// Enable or disable automatic copy (and clear) of selection when releasing mouse
// Default: true
//
// copy_on_select false

// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
//
// scrollback_editor "/usr/bin/vim"

// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// Default: false
//
// mirror_session true

// The folder in which Zellij will look for layouts
//
// layout_dir "/path/to/my/layout_dir"

// The folder in which Zellij will look for themes
//
// theme_dir "/path/to/my/theme_dir"

// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
// Default: true
//
// styled_underlines false

// Enable or disable writing of session metadata to disk (if disabled, other sessions might not know
// metadata info on this session)
// Default: false
//
// disable_session_metadata true
